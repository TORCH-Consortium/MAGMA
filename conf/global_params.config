// The input CSV sample file (the study id cannot start with 'XBS_REF_')
//NOTE: The samplesheet should have the following fields [study, sample, library, attempt, flowcell, lane, index_sequence, r1, r2]
//NOTE: Most of these parameters are used to create unique_id in XBS_main.py
input_samplesheet = "${projectDir}/samplesheet.csv"
//FIXME: Remove after mini devtime tests are done
// input_samplesheet = "${projectDir}/resources/reference_set/xbs-nf.mini.test.csv"

// The directory to which all output files should be written
outdir = "${projectDir}/results"

// The name of the output VCF file
// NOTE: This parameter is used to derive the JOINT_NAME in XBS_main.py
vcf_name = "joint"

//Use this flag to skip the final merge
skip_merge = false

//The median coverage required to process the sample
median_coverage_cutoff = 10

//The breadth of coverage required to process the sample
breadth_of_coverage_cutoff = 0.90

//The relative abundunce of the majority strain required to process the sample
rel_abundance_cutoff = 0.80

//The maximum fraction of NTM DNA allowed to process the sample
ntm_fraction_cutoff = 0.20

//The path to resistance database to use for resistance calling
//NOTE: Keeping it false since the trouble with keys (drug names) in tb-profiler collate stage. See https://github.com/abhi18av/xbs-nf/pull/50
resistance_db= false // "${projectDir}/resources/resistance_db_v2"

//NOTE: If the dataset is contaminated, Base Recalibration steps are skipped (XBS_call#L48)
dataset_is_not_contaminated = false

//NOTE: Output file for high quality variant depths XBS_call#L82
compute_minor_variants = false

optimize_variant_recalibration = false

//FIXME: (For SNPEFF) Add warning in readme NOT to include a reference file with multiple dots in name.
ref_fasta_basename = "NC-000962-3-H37Rv"
ref_fasta_dir = "${projectDir}/resources/genome"
ref_fasta_dict = "${params.ref_fasta_dir}/${params.ref_fasta_basename}.dict"
ref_fasta = "${params.ref_fasta_dir}/${params.ref_fasta_basename}.fa"
ref_fasta_amb = "${params.ref_fasta}.amb"
ref_fasta_ann = "${params.ref_fasta}.ann"
ref_fasta_bwt = "${params.ref_fasta}.bwt"
ref_fasta_fai = "${params.ref_fasta}.fai"
ref_fasta_pac = "${params.ref_fasta}.pac"
ref_fasta_sa = "${params.ref_fasta}.sa"


//TODO: Confirm if this is shared
drgenes_list = "${projectDir}/data/test_data/DRgenes.list"

rrna_list = "${projectDir}/resources/regions/rRNA.list"

dbsnp_vcf = "${projectDir}/resources/known/Benavente2015.UVPapproved.rRNAexcluded.vcf.gz"
dbsnp_vcf_tbi =  "${params.dbsnp_vcf}.tbi"


excluded_loci_list = "${projectDir}/resources/regions/UVP_List_of_Excluded_loci.list"

benavente2015_vcf = "${projectDir}/resources/known/Benavente2015.UVPapproved.rRNAexcluded.vcf.gz"
benavente2015_vcf_tbi = "${params.benavente2015_vcf}.tbi"

coll2014_vcf = "${projectDir}/resources/truth/Coll2014.UVPapproved.rRNAexcluded.vcf.gz"
coll2014_vcf_tbi = "${params.coll2014_vcf}.tbi"

coll2018_vcf = "${projectDir}/resources/truth/Coll2018.UVPapproved.rRNAexcluded.vcf.gz"
coll2018_vcf_tbi = "${params.coll2018_vcf}.tbi"

napier2020_vcf = "${projectDir}/resources/truth/Napier2020.UVPapproved.rRNAexcluded.vcf.gz"
napier2020_vcf_tbi = "${params.napier2020_vcf}.tbi"

walker2015_vcf = "${projectDir}/resources/truth/Walker2015.UVPapproved.rRNAexcluded.vcf.gz"
walker2015_vcf_tbi = "${params.walker2015_vcf}.tbi"

zeng2018_vcf = "${projectDir}/resources/truth/Zeng2018.UVPapproved.rRNAexcluded.vcf.gz"
zeng2018_vcf_tbi = "${params.zeng2018_vcf}.tbi"


//FIXME Move all publishDir related content to config using the withName which is fixed in v21.10 onwards


//-----------------------
// Custom tool paths
//-----------------------

fastqc_path = "fastqc"
multiqc_path = "multiqc"
samtools_path = "samtools"
bwa_path = "bwa"
clusterpicker_path = "cluster-picker"
quanttb_path = "quanttb"
gatk_path = "gatk"
lofreq_path = "lofreq"
delly_path = "delly"
bcftools_path = "bcftools"
snpeff_path = "snpEff"
datamash_path = "datamash"
snpdists_path = "snp-dists"
snpsites_path = "snp-sites"
bgzip_path = "bgzip"
tbprofiler_path = "tb-profiler"
iqtree_path = "iqtree"


// Control the global publishing behavior
save_mode = 'copy'
should_publish = true

//-----------------------
// Processes used in MAP_WF and QUANTTB
//-----------------------

FASTQC {
    results_dir = "${params.outdir}/fastqc/"
}

MULTIQC {
    results_dir = "${params.outdir}/multiqc/"
}

BWA_MEM {
    results_dir = "${params.outdir}/bwa/mem/"
}

QUANTTB_QUANT {
    results_dir = "${params.outdir}/quanttb/quant/"

}

UTILS_QUANTTB_SAMPLE_QC {
    results_dir = "${params.outdir}/quanttb/sample_qc/"
}

UTILS_QUANTTB_COHORT_STATS {
    results_dir = "${params.outdir}/quanttb/cohort_stats/"
}



//-----------------------
// Processes used in CALL_WF
//-----------------------

SAMTOOLS_MERGE {
    results_dir = "${params.outdir}/samtools/merge/"

}

GATK_MARK_DUPLICATES {
    results_dir = "${params.outdir}/gatk/mark_duplicates/"

}

GATK_BASE_RECALIBRATOR {
    results_dir = "${params.outdir}/gatk/base_recalibrator/"

}

GATK_APPLY_BQSR {
    results_dir = "${params.outdir}/gatk/apply_bqsr/"

}

SAMTOOLS_INDEX {
    results_dir = "${params.outdir}/samtools/index/"

}

GATK_HAPLOTYPE_CALLER {
    results_dir = "${params.outdir}/gatk/haplotype_caller/"

    arguments = " -ploidy 1 --read-filter MappingQualityNotZeroReadFilter -G StandardAnnotation -G AS_StandardAnnotation "
}

GATK_HAPLOTYPE_CALLER__MINOR_VARIANTS {
    results_dir = "${params.outdir}/gatk/haplotype_caller__minor_variants/"

    arguments = " -ploidy 1 \
                    --minimum-mapping-quality 60 \
                    --min-base-quality-score 20 \
                    --read-filter MappingQualityNotZeroReadFilter \
                    -G StandardAnnotation \
                    --output-mode EMIT_ALL_ACTIVE_SITES "
}

LOFREQ_CALL__NTM {
    results_dir = "${params.outdir}/lofreq/call__ntm/"

    region = "1472307-1472307"
    arguments = " -m 60 -Q 20 -a 1 "
}

LOFREQ_INDELQUAL {
    results_dir = "${params.outdir}/lofreq/indelqual/"

    arguments = "-m 60"
}

SAMTOOLS_INDEX__LOFREQ {
    results_dir = "${params.outdir}/samtools/index__lofreq/"

}

LOFREQ_CALL {
    results_dir = "${params.outdir}/lofreq/call/"

    //NOTE: Curretly using default p-value for filtering. XBS_call#L118
    arguments = "-m 60 --call-indels"
}

LOFREQ_FILTER {
    results_dir = "${params.outdir}/lofreq/filter/"

    arguments = "-a 60"
}

DELLY_CALL {
    results_dir = "${params.outdir}/delly/call/"

    arguments = "-u 30"
}

BCFTOOLS_VIEW {
    results_dir = "${params.outdir}/bcftools/view/"

}

GATK_INDEX_FEATURE_FILE {
    results_dir = "${params.outdir}/gatk/index_feature_file/"

}

GATK_SELECT_VARIANTS__INTERVALS {
    results_dir = "${params.outdir}/gatk/select_variants__intervals/"

}

SAMTOOLS_STATS {
    results_dir = "${params.outdir}/samtools/stats/"

    arguments = "-F DUP,SUPPLEMENTARY,SECONDARY,UNMAP,QCFAIL"
}

GATK_COLLECT_WGS_METRICS {
    results_dir = "${params.outdir}/gatk/collect_wgs_metrics/"

    arguments = " --READ_LENGTH 0 --COVERAGE_CAP 10000 --COUNT_UNPAIRED"
}

GATK_FLAG_STAT {
    results_dir = "${params.outdir}/gatk/flag_stat/"

}


UTILS_SAMPLE_STATS {
    results_dir = "${params.outdir}/stats/samples/"
}

UTILS_COHORT_STATS {
    results_dir = "${params.outdir}/stats/cohort/"
}



//-----------------------
// Processes used in MERGE_WF
//-----------------------



GATK_COMBINE_GVCFS {
    results_dir = "${params.outdir}/gatk/combine_gvcfs/"

    arguments = " -G StandardAnnotation -G AS_StandardAnnotation "

}

GATK_GENOTYPE_GVCFS {
    results_dir = "${params.outdir}/gatk/genotype_gvcfs"

    arguments = " -G StandardAnnotation -G AS_StandardAnnotation --sample-ploidy 1 "
}


SNPEFF {
    results_dir = "${params.outdir}/snpeff"

    arguments = " -nostats -ud 40 Mycobacterium_tuberculosis_h37rv "
}


BGZIP {
    results_dir = "${params.outdir}/bgzip"

}


GATK_INDEX_FEATURE_FILE__COHORT {
    results_dir = "${params.outdir}/gatk/index_feature_file__cohort"

}



GATK_SELECT_VARIANTS__SNP {
    results_dir = "${params.outdir}/gatk/select_variants__snp"

    arguments = " --remove-unused-alternates --exclude-non-variants "
}

GATK_SELECT_VARIANTS__INDEL {
    results_dir = "${params.outdir}/gatk/select_variants__indel"

    arguments = " --remove-unused-alternates --exclude-non-variants "
}


GATK_VARIANT_RECALIBRATOR__SNP {
    results_dir = "${params.outdir}/gatk/variant_recalibrator__snp"

    arguments = " --use-allele-specific-annotations \
                    -AS \
                    --target-titv 1.7 \
                    --truth-sensitivity-tranche 100.0 \
                    --truth-sensitivity-tranche 99.9 \
                    --truth-sensitivity-tranche 99.8 \
                    --truth-sensitivity-tranche 99.7 \
                    --truth-sensitivity-tranche 99.6 \
                    --truth-sensitivity-tranche 99.5 \
                    --truth-sensitivity-tranche 99.4 \
                    --truth-sensitivity-tranche 99.3 \
                    --truth-sensitivity-tranche 99.2 \
                    --truth-sensitivity-tranche 99.1 \
                    --truth-sensitivity-tranche 99.0 \
                    --max-gaussians 4 \
                    -mq-cap 60"
}

UTILS_ELIMINATE_ANNOTATION {
    results_dir = "${params.outdir}/eliminate_annotation/"
}

GATK_VARIANT_RECALIBRATOR__INDEL {
    results_dir = "${params.outdir}/gatk/variant_recalibrator__indel"


    arguments = " -AS \
                    --target-titv 1.8 \
                    --truth-sensitivity-tranche 100.0 \
                    --truth-sensitivity-tranche 99.9 \
                    --truth-sensitivity-tranche 99.8 \
                    --truth-sensitivity-tranche 99.7 \
                    --truth-sensitivity-tranche 99.6 \
                    --truth-sensitivity-tranche 99.5 \
                    --truth-sensitivity-tranche 99.4 \
                    --truth-sensitivity-tranche 99.3 \
                    --truth-sensitivity-tranche 99.2 \
                    --truth-sensitivity-tranche 99.1 \
                    --truth-sensitivity-tranche 99.0 \
                    --max-gaussians 4 \
                    -mq-cap 60"
}


GATK_APPLY_VQSR__SNP {
    results_dir = "${params.outdir}/gatk/apply_vqsr__snp"

    arguments = " --ts-filter-level 99.90 -AS --exclude-filtered "
}

GATK_APPLY_VQSR__INDEL {
    results_dir = "${params.outdir}/gatk/apply_vqsr_indel"

    arguments = ""
}


GATK_SELECT_VARIANTS__EXCLUSION__SNP {
    results_dir = "${params.outdir}/gatk/select_variants__exclusion__snp"

}



GATK_SELECT_VARIANTS__EXCLUSION__INDEL {
    results_dir = "${params.outdir}/gatk/select_variants__exclusion__indel"

}


GATK_MERGE_VCFS {
    results_dir = "${params.outdir}/gatk/merge_vcfs"

}


TBPROFILER_VCF_PROFILE__COHORT {
    results_dir = "${params.outdir}/tbprofiler/vcf_profile__cohort"


}


TBPROFILER_COLLATE__COHORT {
    results_dir = "${params.outdir}/tbprofiler/collate__cohort"

    prefix = "XBS.resistance"
}


TBPROFILER_VCF_PROFILE__LOFREQ {
    results_dir = "${params.outdir}/tbprofiler/vcf_profile__lofreq"


}

TBPROFILER_COLLATE__LOFREQ {
    results_dir = "${params.outdir}/tbprofiler/collate__lofreq"

    prefix = "XBS.resistance.LoFreq"

}


GATK_SELECT_VARIANTS__PHYLOGENY {
    results_dir = "${params.outdir}/gatk/select_variants__phylogeny"

    arguments = " --remove-unused-alternates --exclude-non-variants "
}

GATK_VARIANTS_TO_TABLE {
    results_dir = "${params.outdir}/gatk/variants_to_table"

    arguments = " -GF GT "
}

SNPSITES {
    results_dir = "${params.outdir}/snpsites/"

}

SNPDISTS {
    results_dir = "${params.outdir}/snpdists/"

}


IQTREE {
    results_dir = "${params.outdir}/iqtree/"

    arguments = " -allnni -redo "
}

CLUSTERPICKER {
    results_dir = "${params.outdir}/clusterpicker/"

    bootstrap_1 = 0
    bootstrap_2 = 0
    max_cluster_size = 0
    algorithm = 'gap'

}

